version: '3'

services:
  prometheus:
    image: prom/prometheus:v2.30.3
    container_name: prometheus
    # user: "$UID:$GID"
    user: root
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./data/prometheus:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.enable-admin-api'
    ports:
      - 8082:9090
    restart: always
  grafana:
    image: grafana/grafana:11.0.9
    container_name: grafana
    # user: "$UID:$GID"
    user: root
    depends_on:
      - renderer
      - prometheus
    volumes:
      - ./data/grafana:/var/lib/grafana
      - ./config/grafana/provisioning:/etc/grafana/provisioning/
      #- ./config/grafana.ini:/etc/grafana/grafana.ini
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=Betawu@21_
      - GF_USERS_ALLOW_SIGN_UP=false
      # configurations for image renderer plugin
      - GF_RENDERING_SERVER_URL=http://renderer:8084/render
      - GF_RENDERING_CALLBACK_URL=http://grafana:8083/
      - GF_LOG_FILTERS=rendering:debug
    ports:
      - 8083:3000
    restart: always
  renderer:
    container_name: grafana-image-renderer
    image: grafana/grafana-image-renderer:3.2.1
    volumes:
      - ./config/render/config.json:/usr/src/app/config.json
    ports:
      - 8084:8081
  # nginx:
  #   container_name: nginx
  #   image: nginx:1.21.3
  #   ports:
  #     - "80:80"
  #   volumes:
  #     - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
  #   restart: always
networks:
  default:
    external:
      name: monitor-network
