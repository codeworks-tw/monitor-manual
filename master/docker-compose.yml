version: '3'

services:
  prometheus:
    image: prom/prometheus:v2.30.3
    container_name: prometheus
    user: root
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./data/prometheus:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.enable-admin-api'
      - '--storage.tsdb.retention.time=45d'
    ports:
      - 9090:9090
    restart: always
  grafana:
    image: grafana/grafana:11.0.9
    container_name: grafana
    user: root
    depends_on:
      - renderer
      - prometheus
    volumes:
      - ./config/grafana/plugins:/var/lib/grafana/plugins
      - ./data/grafana:/var/lib/grafana
      - ./config/grafana/provisioning:/etc/grafana/provisioning
      # - ./config/grafana.ini:/etc/grafana/grafana.ini
      - ./:/root/mahendrapaipuri-dashboardreporter-app
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=Betawu@21_
      - GF_USERS_ALLOW_SIGN_UP=false

      # image renderer plugin configurations
      - GF_RENDERING_SERVER_URL=http://renderer:8081/render
      - GF_RENDERING_CALLBACK_URL=http://grafana:3000/
      - GF_LOG_FILTERS=rendering:debug

      # reporter plugin configurations
      - GF_FEATURE_TOGGLES_ENABLE=${GF_FEATURE_TOGGLES_ENABLE:-accessControlOnCall,idForwarding,externalServiceAccounts}
      - GF_AUTH_MANAGED_SERVICE_ACCOUNTS_ENABLED=${GF_AUTH_MANAGED_SERVICE_ACCOUNTS_ENABLED:-true}
      # disable alerting because it vomits logs
      # - GF_ALERTING_ENABLED=false
      # - GF_UNIFIED_ALERTING_ENABLED=false
      - GF_PLUGINS_ALLOW_LOADING_UNSIGNED_PLUGINS=mahendrapaipuri-dashboardreporter-app
      - "GF_LOG_FILTERS=rendering:debug plugin.mahendrapaipuri-dashboardreporter-app:debug"
    ports:
      - 3000:3000
    restart: always
  renderer:
    image: grafana/grafana-image-renderer:latest
    container_name: renderer
    environment:
      # Recommendation of grafana-image-renderer for optimal performance
      # https://grafana.com/docs/grafana/latest/setup-grafana/image-rendering/#configuration
      - RENDERING_MODE=clustered
      - RENDERING_CLUSTERING_MODE=context
      - RENDERING_CLUSTERING_MAX_CONCURRENCY=5
      - RENDERING_CLUSTERING_TIMEOUT=60
      - IGNORE_HTTPS_ERRORS=trueFF
    ports:
      - 8081:8081
    restart: always
  chrome:
    # 9222 port will be exposed automatically, remember to set it in the report plugin config page as ws://localhost:9222
    image: chromedp/headless-shell:latest
    container_name: chrome
    shm_size: 2G
    init: true
    network_mode: service:grafana
    restart: always
    
  # TBD: set up htdpasswd by nginx
  # nginx:
  #   container_name: nginx
  #   image: nginx:1.21.3
  #   ports:
  #     - "80:80"
  #   volumes:
  #     - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
  #   restart: always
networks:
  default:    
    name: monitor-network
    external: false # docker compose will automatically create and manage this network
